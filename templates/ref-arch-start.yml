AWSTemplateFormatVersion: 2010-09-09
Description:
   This CloudFormation Template Deploys DI Reference Architecture of a
   Multi-tenant Identity Platform featuring Amazon Cognito. It will deploy a
   VPC, Security Groups, ECS Cluster, 5 ECS Task Definitions & Services,
   Application Load Balancer, API Gateway, S3 Buckets, CodePipeline, CodeBuild
   Projects. It will perform a Health Check with a Custom Resource, and deploy
   an initial provisioning of a System Admin User for the Identity Platform.
Metadata:
   # Defines how parameters are grouped and sorted in the AWS
   # CloudFormation console. When you create or update stacks
   # in the console, the console lists input parameters in alphabetical
   # order by their logical IDs. By using this key, you can
   # define your own parameter grouping and ordering so that
   # users can efficiently specify parameter values.
   AWS::CloudFormation::Interface:
      # A list of parameter group types, where you specify group names,
      # the parameters in each group, and the order in which the
      # parameters are shown.
      ParameterGroups:
         # Network parameter group
         - Label:
              default: Network Configuration
           Parameters:
              - AvailabilityZones
              - VPCCIDR
              - PrivateSubnet1CIDR
              - PrivateSubnet2CIDR
              - PublicSubnet1CIDR
              - PublicSubnet2CIDR
         # S3 location where the nested stacks are location
         - Label:
              default:
                 "DI Reference Arch Stacks Location in S3. Nested stacks for
                 this deployment will need to reside at a location similar to:
                 https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}/xxxx.template"
           Parameters:
              - QSS3BucketName
              - QSS3KeyPrefix
         # Key Pair Name for Instances created so users
         # can SSH in if desired
         - Label:
              default:
                 Key pair for EC2 instances that will created. This is needed
                 for SSH access into box if configures so.
           Parameters:
              - KeyPairName
              - InstanceType
         # DI Sys Admin Configuration for this deployment
         - Label:
              default: DI Sys Admin Info for this deployment
           Parameters:
              - Email
              - Company
              - Firstname
              - Lastname
         # These are the tables used for user and tenant
         # storage
         - Label:
              default: DI Multi-tenant DynamoDB Table Configuration
           Parameters:
              - UserTable
              - TenantTable
      # A mapping of parameters and their friendly names that the AWS CloudFormation
      # console shows when a stack is created or updated.
      ParameterLabels:
         AvailabilityZones:
            default: Availability Zones
         KeyPairName:
            default: Key Pair Name
         InstanceType:
            default: Instance Type
         PrivateSubnet1CIDR:
            default: Private Subnet 1 CIDR
         PrivateSubnet2CIDR:
            default: Private Subnet 2 CIDR
         PublicSubnet1CIDR:
            default: Public Subnet 1 CIDR
         PublicSubnet2CIDR:
            default: Public Subnet 2 CIDR
         QSS3KeyPrefix:
            default: Di Configuration S3 Key Prefix
         QSS3BucketName:
            default: Di Configuration S3 Bucket Name
         VPCCIDR:
            default: VPC CIDR
         Email:
            default: Email Address
         Company:
            default: Company Name
         Firstname:
            default: First Name
         Lastname:
            default: Last Name
         UserTable:
            default: User
         TenantTable:
            default: Tenant

# OPTIONAL Parameters section to customize your templates.
# Parameters enable you to input custom values to your template each
# time you create or update a stack.
Parameters:
   AvailabilityZones:
      Description:
         "List of Availability Zones to use for the subnets in the VPC. Note:
         The logical order is preserved and only 2 AZs are used for this
         deployment."
      Type: List<AWS::EC2::AvailabilityZone::Name>
   KeyPairName:
      Description: Key pairs allow SSH access to EC2 instances when allowed.
      Type: AWS::EC2::KeyPair::KeyName
   InstanceType:
      Description:
         EC2 instance type to be used. More can be added to stack template Enter
         t2.micro, t2.small, or t2.large. Default is t2.small.
      Type: String
      Default: t2.small
      AllowedValues:
         - t2.micro
         - t2.small
         - t2.large
   PrivateSubnet1CIDR:
      AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
      ConstraintDescription:
         CIDR block parameter must be in the form x.x.x.x/16-28
      Default: 10.0.0.0/19
      Description:
         CIDR block for private subnet 1 located in Availability Zone 1.
      Type: String
   PrivateSubnet2CIDR:
      AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
      ConstraintDescription:
         CIDR block parameter must be in the form x.x.x.x/16-28
      Default: 10.0.32.0/19
      Description:
         CIDR block for private subnet 2 located in Availability Zone 2.
      Type: String
   PublicSubnet1CIDR:
      AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
      ConstraintDescription:
         CIDR block parameter must be in the form x.x.x.x/16-28
      Default: 10.0.128.0/20
      Description:
         CIDR Block for the public DMZ subnet 1 located in Availability Zone 1
      Type: String
   PublicSubnet2CIDR:
      AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
      ConstraintDescription:
         CIDR block parameter must be in the form x.x.x.x/16-28
      Default: 10.0.144.0/20
      Description:
         CIDR Block for the public DMZ subnet 2 located in Availability Zone 2
      Type: String
   # Nested stacks for this deployment will need to reside at a location similar to:
   # https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}/xxxx.template
   QSS3BucketName:
      AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
      ConstraintDescription:
         DI configuration bucket name can include numbers, lowercase letters,
         uppercase letters, and hyphens (-). It cannot start or end with a
         hyphen (-).
      Description:
         S3 bucket name for the Di Configuration assets. Di Configuration bucket
         name can include numbers, lowercase letters, uppercase letters, and
         hyphens (-). It cannot start or end with a hyphen (-).
      Type: String
   QSS3KeyPrefix:
      AllowedPattern: ^[0-9a-zA-Z-/]*$
      ConstraintDescription:
         Di Configuration key prefix can include numbers, lowercase letters,
         uppercase letters, hyphens (-), and a forward slash (/) at the end of
         the prefix.
      Description:
         S3 key prefix for the Di Configuration assets. Di Configuration key
         prefix can include numbers, lowercase letters, uppercase letters,
         hyphens (-), and forward slash (/).
      Type: String
   VPCCIDR:
      AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
      ConstraintDescription:
         CIDR block parameter must be in the form x.x.x.x/16-28
      Default: 10.0.0.0/16
      Description: CIDR Block for the VPC
      Type: String
   Email:
      Description: The Email Address of the DI Sys Admin.
      Default: email@example.com
      Type: String
   Company:
      Description: The Name of the Company that will manage the deployment
      Default: MyCompanyName
      Type: String
   Firstname:
      Description: The First Name of the DI Sys Admin.
      Default: MyFirstName
      Type: String
   Lastname:
      Description: The Last Name of the DI Sys Admin.
      Default: MyLastName
      Type: String
   UserTable:
      Description: The DynamoDB Table for Users of the Multi-Tenant System
      Default: User
      Type: String
   TenantTable:
      Description: The DynamoDB Table for Tenants of the Multi-Tenant System
      Default: Tenant
      Type: String
# REQUIRED Resources section declares the AWS resources that you want to
# include in the stack, such as an Amazon EC2 instance or an Amazon S3 bucket.
Resources:
   # The logical ID must be alphanumeric (A-Za-z0-9) and unique within the template.
   # Use the logical name to reference the resource in other parts of the template.
   # This stack creates the VPC stack for the deployment and is needed before we create
   # anything else. It created via nested stack aws-vpc.template
   VPCStack:
      # For a list of all resource types, see:
      # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html
      # ::Stack indicates this resource is being created by a NESTED STACK
      # see: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html
      Type: AWS::CloudFormation::Stack
      # Resource properties are additional options that you can specify for a resource.
      # If a resource doesn't require that properties be declared, omit the properties section
      Properties:
         # The URL of a template that specifies the stack that you want to create as a resource.
         # Template files can use any extension, such as .json, .yaml, .template, or .txt.
         # The template must be stored on an Amazon S3 bucket, so the URL must have
         # the form: https://s3.amazonaws.com/.../TemplateName.extension
         TemplateURL: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}/ref-arch-vpc.yml
         # The set of parameters passed via !Ref to AWS CloudFormation when this nested stack is created.
         Parameters:
            AvailabilityZones: !Join
               - ","
               - !Ref AvailabilityZones
            KeyPairName: !Ref KeyPairName
            NumberOfAZs: "2"
            PrivateSubnet1ACIDR: !Ref PrivateSubnet1CIDR
            PrivateSubnet2ACIDR: !Ref PrivateSubnet2CIDR
            PublicSubnet1CIDR: !Ref PublicSubnet1CIDR
            PublicSubnet2CIDR: !Ref PublicSubnet2CIDR
            VPCCIDR: !Ref VPCCIDR
   #
   IdentityStack:
      DependsOn: VPCStack
      Type: AWS::CloudFormation::Stack
      Properties:
         TemplateURL: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}/ref-arch-infrastructure.yml
         Parameters:
            KeyPairName: !Ref KeyPairName
            InstanceType: !Ref InstanceType
            PublicSubnet1ID: !GetAtt
               - VPCStack
               - Outputs.PublicSubnet1ID
            PublicSubnet2ID: !GetAtt
               - VPCStack
               - Outputs.PublicSubnet2ID
            PrivateSubnet1ID: !GetAtt
               - VPCStack
               - Outputs.PrivateSubnet1AID
            PrivateSubnet2ID: !GetAtt
               - VPCStack
               - Outputs.PrivateSubnet2AID
            QSS3BucketName: !Ref QSS3BucketName
            QSS3KeyPrefix: !Ref QSS3KeyPrefix
            Email: !Ref Email
            Company: !Ref Company
            Firstname: !Ref Firstname
            Lastname: !Ref Lastname
            UserTable: !Ref UserTable
            TenantTable: !Ref TenantTable
            VPCID: !GetAtt
               - VPCStack
               - Outputs.VPCID